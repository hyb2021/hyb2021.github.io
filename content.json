[{"title":"","date":"2021-11-27T07:00:56.555Z","path":"2021/11/27/基础/","text":"基础java运行过程 编译:编译器一次把所有*.java文件转成 *.class字节码文件。 类加载:java虚拟机首先将编译好的字节码文件加载到内存。 解释执行:java虚拟机针对加载到内存中的Java类进行解释运行。 总结:java程序是由虚拟机进行解释运行的，而不是操作系统。 数据类型强类型语言要求变量的使用要严格符合规定，所有变量必须先定义后才能使用。 Java数据类型分为两大类 基本类型 引用类型 浮点数类型是有限、离散、舍入误差的、接近的。不用浮点数比较和计算。123456789float f=0.1f;double d=1.0/10;System.out.println(f==d);//falsefloat d1=2332222445555f;float d2=d1+1;System.out.println(d1);//2.33222255E12System.out.println(d2);//2.33222255E12System.out.println(d1==d2);//true 类型转换java是强类型语言，因此在进行有些运算的时候，需要用到类型转换。这里的有些运算指的是java数据类型中基本类型，除boolean类型外。 byte，short，char，int，long，float，double 低————————————————高 运算中，不同类型的数据先转化位同一类型，然后运算。运算中，范围小的会自动转换成范围大的。 强制类型转换范围大的转成范围小的 自动类型转换范围小的转成范围大的 内存溢出123int i=129;byte b1=(byte)i;System.out.println(b1);//-127 byte类型的范围是[-128,127],给129内存溢出了 123456int money=10_0000_0000;int years=20;int total1=money*years;//-1474836480 内存溢出long total2=money*years;//-1474836480 内存依然溢出，因为计算后的数据类型依然时int，转换成long之前已经出现问题long total3=((long)money)*years;//20000000000System.out.println(total3);","tags":[]},{"title":"","date":"2021-11-26T13:01:51.889Z","path":"2021/11/26/帆软/","text":"帆软1.点击查询前显示所有内容点击参数栏，参数栏的属性取消勾选点击查询前不显示报表内容。 2.给报表内容插序号","tags":[]},{"title":"生日计时","date":"2021-11-16T13:03:06.000Z","path":"2021/11/16/生日计时/","text":"生日计时请点击 :计时","tags":[]},{"title":"飘风不终朝，骤雨不终日","date":"2021-10-26T02:13:22.000Z","path":"2021/10/26/飘风不终朝，骤雨不终日/","text":"太用力的人跑不远。道德经里有这样一句话: 飘风不终朝，骤雨不终日。狂风不会刮一个早晨，暴雨不会下一整天。 短暂而快速的奔跑，只会让你迅速消耗完你的精神能量，然后让你变得萎靡不振。 短时间的高投入，意味着短时间有一个高回报。无法容忍投入后没有回报，因此结果只会是立马放弃。 真正的坚持，来源于一种温柔而又坚定的力量，而不是时时刻刻去找刺激。 人越用力，越是容易让自己的神经过载。大量地增加负荷去求得一个正反馈，当负反馈来临的时候，往往不能接受而变得抑郁焦虑。 过度努力的人只是在不断地瞎折腾自己，而真正坚持下来的人往往显得非常轻松","tags":[{"name":"知乎","slug":"知乎","permalink":"http://example.com/tags/%E7%9F%A5%E4%B9%8E/"},{"name":"道德经","slug":"道德经","permalink":"http://example.com/tags/%E9%81%93%E5%BE%B7%E7%BB%8F/"}]},{"title":"Markdown的坑","date":"2021-10-12T02:38:29.000Z","path":"2021/10/12/Markdown的坑/","text":"1.```使用```开头之前必须要有一行空行使用```结束时切记不要在结束标签后加空格，否则该标签未关闭。 2. `一句话中使用 ` 标签包着一个字或一个词。 3.换行两种方案1.两个空格然后回车2.使用&lt;br&gt; 4.字体大小、颜色、类型、加粗、倾斜&lt;font size=5&gt;Hello&lt;font color=red&gt;Hello&lt;font face=&quot;微软雅黑&quot;&gt;Hello*加粗***倾斜** 5. 引用 单行&gt; Dorothy followed her through many of the beautiful rooms in her castle. Dorothy followed her through many of the beautiful rooms in her castle. 多行 1234&gt; Dorothy followed her through many of the beautiful rooms in her castle.&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.&gt; Dorothy followed her through many of the beautiful rooms in her castle. The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 6.列表 有序1. 无序-","tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://example.com/tags/Markdown/"}]},{"title":"Hexo搭建遇到的问题","date":"2021-10-09T07:24:38.000Z","path":"2021/10/09/Hexo搭建遇到的问题/","text":"2021年10月9日更新:Hexo博客在部署时遇到很多问题，记录下遇到的问题。 1.把本地内容推到github遇到报错”fatal: unable to auto-detect email address”在blog目录下执行 123hexo clean //清除缓存hexo g //生成静态文件hexo d //部署到GitHub 出现报错误fatal: unable to auto-detect email address原因是未配置GitHub用户名何邮箱。 12git config --global user.email &quot;git邮箱&quot;git config --global user.name &quot;git用户名&quot; 2.文章分类和标签1234567title: Hello World date: 2013/7/13 20:46:25 categories: - 分类名 tags: - 标签1 - 标签2 3.新建命令1hexo new 标题","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"}]},{"title":"Hello World","date":"2021-10-09T02:29:49.735Z","path":"2021/10/09/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]